```
Collidable objects have flags that tells the system whether or not it should care about its collision box existing, as well as whether or not it should be checked against.

Collision box existing -- if false, then don't do any collision checks with it at all. default true.
Check against?         -- if true, compile a list of what objects are colliding with this one. default false. should be true for character implementations. objects that have this flag set to true will have both their own onCollide method as well as the colliding object's onCollide method called.

-- The onCollide method (onCollide(object, collisionType))

Simply just an implementation of reaction against a colliding object.

--

Noting that this collision handler implementation should be used both for the overworld and combat; its important that it doesn't care about the environment it is within.

If the implementation is dependent on knowing the area where it should be checking for collisions, make sure that the handler is able to change this area any time before processing. Within the overworld, this area should be the entire area of the room. Objects out-of-bounds from the overworld room area are automagically fixed to have a position on the border of the axis they're across. Within combat, this area is based on combat implementation. Bullet positions are not fixed if OOB, however if caught out of bounds bullets will be deleted.
```